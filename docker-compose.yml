services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: aiverse-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: AIverse
    volumes:
      - mongodb_data:/data/db
      - ./mongodb-init:/docker-entrypoint-initdb.d
    networks:
      - aiverse-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: aiverse-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - USE_ATLAS=false
      - MONGO_URI_LOCAL=mongodb://mongodb:27017/AIverse
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      - API_BASE_URL=http://localhost:5000
      - PUBLIC_BASE_URL=http://localhost:5000
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY}
      - HF_TXT2IMG_MODEL=${HF_TXT2IMG_MODEL:-stabilityai/stable-diffusion-2}
      - OLLAMA_URL=${OLLAMA_URL:-http://127.0.0.1:11434}
      - COMFYUI_HOST=${COMFYUI_HOST:-127.0.0.1}
      - COMFYUI_PORT=${COMFYUI_PORT:-8188}
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/outputs:/app/outputs
    depends_on:
      - mongodb
    networks:
      - aiverse-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: aiverse-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - VITE_API_URL=http://localhost:5000
    depends_on:
      - backend
    networks:
      - aiverse-network

  # Redis (optional, for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: aiverse-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - aiverse-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  aiverse-network:
    driver: bridge
